resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.12"
- name: semver
  type: docker-image
  source:
    repository: "concourse/semver-resource"
    tag: "1.0.2"
resources:
- name: kubernetes-production
  type: kubernetes
  icon: application-import
  source:
    server: https://api.incident-reporting-724e9f80-6826-11e9-b4e4-0e7c7c059320.57197a32-43f3-46f6-bd80-bc65267b6d7c.vke-user.com
    namespace: ((generated_serviceaccount_namespace))
    token: ((generated_serviceaccount_token))
    certificate_authority: ((generated_serviceaccount_ca))

- name: truffle-docker-image
  type: docker-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-registry))/((docker-hub-orgname))/incident-reporting-ui
- name: ui-docker-image
  type: docker-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-registry))/((docker-hub-orgname))/incident-reporting-ui

- name: version
  icon: weather-sunset
  type: semver
  source:
    driver: s3
    initial_version: ((s3-semver-initial-version))
    endpoint: ((s3-semver-endpoint))
    bucket: ((s3-semver-bucket))
    key: ((s3-semver-key))
    access_key_id: ((s3-semver-key-id))
    secret_access_key: ((s3-semver-access-key))
    disable_ssl: ((s3-semver-disable-ssl))

- name: incident-reporting
  icon: github-face
  type: git
  source:
    uri: https://github.com/vmware-samples/incident-reporting.git
    branch: ((code-branch))


jobs:

  - name: truffle-tests
    plan:
      - get: truffle-docker-image
        trigger: true
      - get: version
        params: {bump: patch}
      - put: version
        params: {file: version/version}
      - task: run truffle tests
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((docker-hub-registry))/((docker-hub-orgname))/incident-reporting-truffle
          run:
            path: sh
            args:
              - -x
              - -c
              - "/usr/local/bin/truffle test"

  - name: kubernetes-deploy-production
    plan:
      - get: incident-reporting
        trigger: true
      - put: kubernetes-production
        params:
          kubectl: apply -f incident-reporting/deployment/kubernetes
          wait_until_ready_selector: app=incident-reporting

  - name: truffle-image
    public: true
    serial: true
    plan:
    - get: incident-reporting
      trigger: true
    - task: get a tag
      config:
        image_resource:
          type: docker-image
          source: {repository: golang, tag: 1.12.4}
        platform: linux
        inputs:
          - name: incident-reporting
        outputs:
          - name: tag-holder
        run:
          path: sh
          args:
            - -c
            - "cd incident-reporting; TAG=$( git --no-pager describe --tags --always ); TAG=${TAG:-`git rev-parse --verify HEAD`}; echo $TAG > ../tag-holder/tag; cat ../tag-holder/tag"
    - put: truffle-docker-image
      params:
        tag_file: tag-holder/tag
        tag_as_latest: true
        build: incident-reporting
        dockerfile: incident-reporting/truffle/Dockerfile

  - name: ui-image
    public: true
    serial: true
    plan:
    - get: incident-reporting
      trigger: true
    - task: get a tag
      config:
        image_resource:
          type: docker-image
          source: {repository: golang, tag: 1.12.4}
        platform: linux
        inputs:
          - name: incident-reporting
        outputs:
          - name: tag-holder
        run:
          path: sh
          args:
            - -c
            - "cd incident-reporting; TAG=$( git --no-pager describe --tags --always ); TAG=${TAG:-`git rev-parse --verify HEAD`}; echo $TAG > ../tag-holder/tag; cat ../tag-holder/tag"
    - put: ui-docker-image
      params:
        tag_file: tag-holder/tag
        tag_as_latest: true
        build: incident-reporting
        dockerfile: incident-reporting/ui-server/Dockerfile
